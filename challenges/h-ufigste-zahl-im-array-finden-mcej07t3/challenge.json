{
  "id": "h-ufigste-zahl-im-array-finden-mcej07t3",
  "title": "Häufigste Zahl im Array finden",
  "description": "### Einführung:\nIn vielen Fällen möchte man die Zahl finden, die am häufigsten in einem Array vorkommt — das sogenannte \"Modus\"-Problem.\n\n### Aufgabe:\nSchreibe eine Methode `MostFrequent(int[] input)`, die die Zahl mit der höchsten Häufigkeit zurückgibt. Bei Gleichstand gib die zuerst vorkommende Zahl zurück.\n\n### Beispiel:\n```csharp\nMostFrequent(new int[] {1, 2, 2, 3, 1, 2}) => 2\nMostFrequent(new int[] {4, 4, 5, 5, 5, 6}) => 5\nMostFrequent(new int[] {9}) => 9\n```",
  "difficulty": "easy",
  "language": "csharp",
  "tags": [
    "csharp",
    "arrays",
    "häufigkeit",
    "modus",
    "statistik",
    "easy"
  ],
  "author": "Jodo2410",
  "createdAt": "2025-06-27T08:04:07.860Z",
  "status": "reported",
  "starterCode": "using System;\n\npublic static class FrequencyAnalyzer\n{\n    public static int MostFrequent(int[] input)\n    {\n        // TODO: Finde die Zahl mit der höchsten Häufigkeit\n        return 0;\n    }\n}",
  "solution": "using System;\nusing System.Collections.Generic;\n\npublic static class FrequencyAnalyzer\n{\n    public static int MostFrequent(int[] input)\n    {\n        Dictionary<int, int> freq = new Dictionary<int, int>();\n        int maxCount = 0;\n        int result = input[0];\n\n        foreach (int num in input)\n        {\n            if (!freq.ContainsKey(num)) freq[num] = 0;\n            freq[num]++;\n\n            if (freq[num] > maxCount || (freq[num] == maxCount && Array.IndexOf(input, num) < Array.IndexOf(input, result)))\n            {\n                maxCount = freq[num];\n                result = num;\n            }\n        }\n\n        return result;\n    }\n}",
  "tests": "using System;\n\npublic static class FrequencyAnalyzerTests\n{\n    public static void RunAllTests()\n    {\n        int passed = 0;\n        int total = 3;\n        Console.WriteLine(\"=== Häufigste Zahl Tests ===\\n\");\n\n        if (Test(\"Test 1\", FrequencyAnalyzer.MostFrequent(new int[] {1, 2, 2, 3, 1, 2}), 2)) passed++;\n        if (Test(\"Test 2\", FrequencyAnalyzer.MostFrequent(new int[] {4, 4, 5, 5, 5, 6}), 5)) passed++;\n        if (Test(\"Test 3\", FrequencyAnalyzer.MostFrequent(new int[] {9}), 9)) passed++;\n\n        Console.WriteLine($\"\\n{passed}/{total} Tests bestanden\");\n    }\n\n    private static bool Test(string name, int actual, int expected)\n    {\n        bool success = actual == expected;\n        Console.WriteLine(success ? $\"[PASS] {name}\" : $\"[FAIL] {name} | Erwartet: {expected}, Erhalten: {actual}\");\n        return success;\n    }\n}",
  "testClassName": "Tests",
  "mainClassName": "HufigsteZahlImArrayFinden",
  "functionName": "HufigsteZahlImArrayFinden",
  "reportedIssueNumber": 89,
  "reportedIssueUrl": "https://github.com/Jodo2410/Code-Challenge/issues/89",
  "isHidden": true
}