{
  "title": "Sum of Positive Numbers",
  "description": "Berechne die Summe aller positiven Zahlen in einem Vektor. Negative Zahlen und Null werden ignoriert. Beispiel: [1, -4, 7, 12] → 20",
  "difficulty": "easy",
  "language": "cpp",
  "tags": ["arrays", "math", "basic", "loops", "conditionals"],
  "author": "Template-Generator",
  "version": "2.0",
  "templateCompliant": true,
  "category": "Basic Programming",
  "estimatedTime": "15-30 Minuten",
  "learningGoals": [
    "Grundlagen der Vektor-Iteration",
    "Bedingte Ausführung (if-Statements)",
    "Akkumulation von Werten",
    "Edge-Case Behandlung"
  ],
  "hints": [
    "Verwende eine Schleife, um über alle Elemente zu iterieren",
    "Prüfe mit if-Statement, ob die Zahl positiv ist",
    "Initialisiere die Summe mit 0",
    "Vergiss nicht die Edge Cases: leere Vektoren und nur negative Zahlen"
  ],
  "examples": [
    {
      "input": "[1, 2, 3, 4, 5]",
      "output": "15",
      "explanation": "Alle Zahlen sind positiv: 1+2+3+4+5 = 15"
    },
    {
      "input": "[1, -4, 7, 12]",
      "output": "20", 
      "explanation": "Nur positive Zahlen: 1+7+12 = 20 (ignoriere -4)"
    },
    {
      "input": "[-1, -2, -3]",
      "output": "0",
      "explanation": "Keine positiven Zahlen vorhanden"
    },
    {
      "input": "[]",
      "output": "0",
      "explanation": "Leerer Vektor ergibt 0"
    }
  ],
  "complexity": {
    "time": "O(n)",
    "space": "O(1)",
    "explanation": "Einmaliger Durchlauf durch den Vektor (O(n)), konstanter zusätzlicher Speicher (O(1))"
  },
  "topics": [
    "Iterationen",
    "Bedingungen", 
    "Akkumulation",
    "Vektor-Manipulation"
  ],
  "prerequisites": [
    "Grundlagen C++ Syntax",
    "for/while Schleifen",
    "if-Statements",
    "std::vector Verwendung"
  ]
}