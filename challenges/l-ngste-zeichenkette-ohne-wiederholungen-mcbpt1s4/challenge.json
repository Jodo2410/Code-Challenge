{
  "id": "l-ngste-zeichenkette-ohne-wiederholungen-mcbpt1s4",
  "title": "Längste Zeichenkette ohne Wiederholungen",
  "description": "Gegeben ist ein String `s`. Finde die Länge der längsten Teilzeichenkette ohne wiederholte Zeichen.\n\nEine Teilzeichenkette ist eine zusammenhängende Sequenz von Zeichen innerhalb des Strings.\n\n**Beispiele:**\n\nEingabe: \"abcabcbb\"  \nAusgabe: 3  // \"abc\"\n\nEingabe: \"bbbbb\"  \nAusgabe: 1  // \"b\"\n\nEingabe: \"pwwkew\"  \nAusgabe: 3  // \"wke\"",
  "difficulty": "medium",
  "language": "csharp",
  "tags": [
    "strings",
    "hashset",
    "two-pointers",
    "sliding-window",
    "csharp",
    "medium"
  ],
  "author": "Jodo2410",
  "createdAt": "2025-06-25T08:51:12.136Z",
  "status": "approved",
  "starterCode": "using System;\nusing System.Collections.Generic;\n\npublic static class Solution {\n    public static int LengthOfLongestSubstring(string s) {\n        // TODO: Implementiere die Lösung\n        return 0;\n    }\n}",
  "solution": "using System;\nusing System.Collections.Generic;\n\npublic static class Solution {\n    public static int LengthOfLongestSubstring(string s) {\n        int maxLen = 0;\n        int left = 0;\n        HashSet<char> set = new HashSet<char>();\n\n        for (int right = 0; right < s.Length; right++) {\n            while (set.Contains(s[right])) {\n                set.Remove(s[left]);\n                left++;\n            }\n            set.Add(s[right]);\n            maxLen = Math.Max(maxLen, right - left + 1);\n        }\n\n        return maxLen;\n    }\n}",
  "tests": "using System;\n\npublic static class Tests {\n    public static void RunAllTests() {\n        int passed = 0;\n        int total = 5;\n\n        if (Solution.LengthOfLongestSubstring(\"abcabcbb\") == 3) {\n            Console.WriteLine(\"Test 1 bestanden ✓ (\"abc\")\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 1 fehlgeschlagen ✗\");\n        }\n\n        if (Solution.LengthOfLongestSubstring(\"bbbbb\") == 1) {\n            Console.WriteLine(\"Test 2 bestanden ✓ (\"b\")\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 2 fehlgeschlagen ✗\");\n        }\n\n        if (Solution.LengthOfLongestSubstring(\"pwwkew\") == 3) {\n            Console.WriteLine(\"Test 3 bestanden ✓ (\"wke\")\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 3 fehlgeschlagen ✗\");\n        }\n\n        if (Solution.LengthOfLongestSubstring(\"\") == 0) {\n            Console.WriteLine(\"Test 4 bestanden ✓ (leer)\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 4 fehlgeschlagen ✗\");\n        }\n\n        if (Solution.LengthOfLongestSubstring(\"dvdf\") == 3) {\n            Console.WriteLine(\"Test 5 bestanden ✓ (\"vdf\")\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 5 fehlgeschlagen ✗\");\n        }\n\n        Console.WriteLine($\"{passed}/{total} Tests bestanden.\");\n    }\n}",
  "testClassName": "Tests",
  "mainClassName": "LngsteZeichenketteOhneWiederholungen",
  "functionName": "LngsteZeichenketteOhneWiederholungen",
  "lastUpdated": 1751006869.32532
}
