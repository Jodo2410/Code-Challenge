{
  "id": "majorit-ts-element-finden-mcbqbqby",
  "title": "Majoritäts-Element finden",
  "description": "Gegeben ist ein Array von Ganzzahlen `nums`. Ein Element wird als *Majoritäts-Element* bezeichnet, wenn es mehr als die Hälfte der Elemente im Array ausmacht. Schreibe eine Funktion, die dieses Element findet und zurückgibt.\n\nDu kannst davon ausgehen, dass ein solches Element immer existiert.\n\n**Beispiele:**\n\nEingabe: [3, 2, 3]  \nAusgabe: 3\n\nEingabe: [2, 2, 1, 1, 1, 2, 2]  \nAusgabe: 2",
  "difficulty": "medium",
  "language": "csharp",
  "tags": [
    "arrays",
    "mehrheitswahl",
    "boyer-moore",
    "algorithmus",
    "csharp",
    "medium"
  ],
  "author": "Jodo2410",
  "createdAt": "2025-06-25T09:05:43.674Z",
  "status": "reported",
  "starterCode": "using System;\nusing System.Collections.Generic;\n\npublic static class Solution {\n    public static int FindMajorityElement(int[] nums) {\n        // TODO: Implementiere die Lösung\n        return -1;\n    }\n}",
  "solution": "using System;\n\npublic static class Solution {\n    public static int FindMajorityElement(int[] nums) {\n        int count = 0;\n        int candidate = 0;\n\n        foreach (int num in nums) {\n            if (count == 0) {\n                candidate = num;\n            }\n            count += (num == candidate) ? 1 : -1;\n        }\n\n        return candidate;\n    }\n}",
  "tests": "using System;\n\npublic static class Tests {\n    public static void RunAllTests() {\n        int passed = 0;\n        int total = 4;\n\n        if (Solution.FindMajorityElement(new int[] {3, 2, 3}) == 3) {\n            Console.WriteLine(\"Test 1 bestanden ✓ (Erwartet: 3)\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 1 fehlgeschlagen ✗\");\n        }\n\n        if (Solution.FindMajorityElement(new int[] {2, 2, 1, 1, 1, 2, 2}) == 2) {\n            Console.WriteLine(\"Test 2 bestanden ✓ (Erwartet: 2)\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 2 fehlgeschlagen ✗\");\n        }\n\n        if (Solution.FindMajorityElement(new int[] {1, 1, 1, 1, 2, 3, 4}) == 1) {\n            Console.WriteLine(\"Test 3 bestanden ✓ (Erwartet: 1)\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 3 fehlgeschlagen ✗\");\n        }\n\n        if (Solution.FindMajorityElement(new int[] {9, 9, 9, 1, 2, 9, 9}) == 9) {\n            Console.WriteLine(\"Test 4 bestanden ✓ (Erwartet: 9)\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 4 fehlgeschlagen ✗\");\n        }\n\n        Console.WriteLine($\"{passed}/{total} Tests bestanden.\");\n    }\n}",
  "testClassName": "Tests",
  "mainClassName": "MajorittselementFinden",
  "functionName": "MajorittselementFinden",
  "reportedIssueNumber": 66,
  "reportedIssueUrl": "https://github.com/Jodo2410/Code-Challenge/issues/66",
  "isHidden": true
}