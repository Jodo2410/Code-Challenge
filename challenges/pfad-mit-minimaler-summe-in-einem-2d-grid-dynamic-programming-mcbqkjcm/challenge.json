{
  "id": "pfad-mit-minimaler-summe-in-einem-2d-grid-dynamic-programming-mcbqkjcm",
  "title": "Pfad mit minimaler Summe in einem 2D-Grid (Dynamic Programming)",
  "description": "Gegeben ist ein 2D-Array `grid` bestehend aus positiven Ganzzahlen. Finde den Pfad von oben links nach unten rechts mit der minimalen möglichen Summe.\n\nDu darfst dich nur **nach rechts oder nach unten** bewegen.\n\n**Beispiel 1:**\nEingabe:\n[\n  [1, 3, 1],\n  [1, 5, 1],\n  [4, 2, 1]\n]\nAusgabe: 7\nErklärung: Der Pfad 1 → 3 → 1 → 1 → 1 ergibt die minimale Summe: 7.\n\n**Beispiel 2:**\nEingabe:\n[\n  [1, 2, 3],\n  [4, 5, 6]\n]\nAusgabe: 12",
  "difficulty": "hard",
  "language": "csharp",
  "tags": [
    "dynamic-programming",
    "matrix",
    "2d-array",
    "pfad",
    "algorithmen",
    "csharp",
    "hard"
  ],
  "author": "Jodo2410",
  "createdAt": "2025-06-25T09:12:34.546Z",
  "status": "approved",
  "starterCode": "using System;\n\npublic static class Solution {\n    public static int MinPathSum(int[][] grid) {\n        // TODO: Implementiere die Lösung\n        return -1;\n    }\n}",
  "solution": "using System;\n\npublic static class Solution {\n    public static int MinPathSum(int[][] grid) {\n        int m = grid.Length;\n        int n = grid[0].Length;\n\n        for (int i = 1; i < m; i++) {\n            grid[i][0] += grid[i - 1][0];\n        }\n\n        for (int j = 1; j < n; j++) {\n            grid[0][j] += grid[0][j - 1];\n        }\n\n        for (int i = 1; i < m; i++) {\n            for (int j = 1; j < n; j++) {\n                grid[i][j] += Math.Min(grid[i - 1][j], grid[i][j - 1]);\n            }\n        }\n\n        return grid[m - 1][n - 1];\n    }\n}",
  "tests": "using System;\n\npublic static class Tests {\n    public static void RunAllTests() {\n        int passed = 0;\n        int total = 3;\n\n        int[][] grid1 = new int[][] {\n            new int[] {1, 3, 1},\n            new int[] {1, 5, 1},\n            new int[] {4, 2, 1}\n        };\n        if (Solution.MinPathSum(grid1) == 7) {\n            Console.WriteLine(\"Test 1 bestanden ✓\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 1 fehlgeschlagen ✗\");\n        }\n\n        int[][] grid2 = new int[][] {\n            new int[] {1, 2, 3},\n            new int[] {4, 5, 6}\n        };\n        if (Solution.MinPathSum(grid2) == 12) {\n            Console.WriteLine(\"Test 2 bestanden ✓\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 2 fehlgeschlagen ✗\");\n        }\n\n        int[][] grid3 = new int[][] {\n            new int[] {5, 9},\n            new int[] {6, 1}\n        };\n        if (Solution.MinPathSum(grid3) == 12) {\n            Console.WriteLine(\"Test 3 bestanden ✓\");\n            passed++;\n        } else {\n            Console.WriteLine(\"Test 3 fehlgeschlagen ✗\");\n        }\n\n        Console.WriteLine($\"{passed}/{total} Tests bestanden.\");\n    }\n}",
  "testClassName": "Tests",
  "mainClassName": "PfadMitMinimalerSummeInEinem2dgridDynamicProgramming",
  "functionName": "PfadMitMinimalerSummeInEinem2dgridDynamicProgramming",
  "lastUpdated": 1751006869.352792,
  "reportedAt": "2025-06-27T23:42:41.262Z"
}
