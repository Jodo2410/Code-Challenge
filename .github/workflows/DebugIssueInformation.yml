name: 🔍 Debug Challenge-ID Extraktion

on:
  issues:
    types: [closed, opened, labeled]

permissions:
  issues: write

jobs:
  debug-extraction:
    if: |
      contains(github.event.issue.labels.*.name, 'challenge-error') ||
      contains(github.event.issue.title, 'Challenge Error Report') ||
      contains(github.event.issue.body, '🚨 Challenge Error Report')
    runs-on: ubuntu-latest
    
    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4
      
      - name: 🔍 Issue Information
        run: |
          echo "=== ISSUE DEBUG INFORMATION ==="
          echo "Issue Number: ${{ github.event.issue.number }}"
          echo "Issue Title: ${{ github.event.issue.title }}"
          echo "Issue Action: ${{ github.event.action }}"
          echo "Issue State: ${{ github.event.issue.state }}"
          echo ""
          
      - name: 📋 Show Issue Body Raw
        run: |
          echo "=== RAW ISSUE BODY ==="
          cat << 'EOF'
          ${{ github.event.issue.body }}
          EOF
          echo ""
          echo "=== END RAW ISSUE BODY ==="
          
      - name: 🧪 Test Challenge-ID Extraction
        run: |
          echo "=== CHALLENGE-ID EXTRACTION TESTS ==="
          
          # Issue-Body in Variable speichern
          ISSUE_BODY='${{ github.event.issue.body }}'
          
          echo "📝 Issue Body Length: ${#ISSUE_BODY} characters"
          echo ""
          
          echo "🧪 Test 1: Suche nach **ID:** Pattern"
          echo "$ISSUE_BODY" | grep -n "ID:" || echo "Kein ID: gefunden"
          echo ""
          
          echo "🧪 Test 2: Alle **..:** Patterns"
          echo "$ISSUE_BODY" | grep -n "\*\*.*:\*\*" || echo "Keine **...:** Patterns gefunden"
          echo ""
          
          echo "🧪 Test 3: Zeilen mit 'mcbt'"  
          echo "$ISSUE_BODY" | grep -n "mcbt" || echo "Kein 'mcbt' gefunden"
          echo ""
          
          echo "🧪 Test 4: Extraction Method 1"
          ID1=$(echo "$ISSUE_BODY" | grep -oE '\*\*ID:\*\*[[:space:]]*[a-zA-Z0-9_-]+' | sed 's/.*\*\*ID:\*\*[[:space:]]*//' | head -1 | xargs 2>/dev/null || echo "")
          echo "Method 1 Result: '$ID1'"
          
          echo "🧪 Test 5: Extraction Method 2 (simple grep)"
          ID2=$(echo "$ISSUE_BODY" | grep -o "balanced-binary-search-tree-validator-mcbt0fnk" || echo "")
          echo "Method 2 Result: '$ID2'"
          
          echo "🧪 Test 6: Find any mcbt pattern"
          ID3=$(echo "$ISSUE_BODY" | grep -oE '[a-zA-Z0-9-]*mcbt[a-zA-Z0-9]+' | head -1 || echo "")
          echo "Method 3 Result: '$ID3'"
          
          echo "🧪 Test 7: Manual search for the specific ID"
          if echo "$ISSUE_BODY" | grep -q "balanced-binary-search-tree-validator-mcbt0fnk"; then
            echo "✅ Found specific ID: balanced-binary-search-tree-validator-mcbt0fnk"
            FINAL_ID="balanced-binary-search-tree-validator-mcbt0fnk"
          else
            echo "❌ Specific ID not found"
            FINAL_ID=""
          fi
          
          echo ""
          echo "📊 FINAL RESULT:"
          if [ -n "$FINAL_ID" ]; then
            echo "✅ Challenge-ID: $FINAL_ID"
          else
            echo "❌ No Challenge-ID found"
          fi
          
      - name: 📂 Check Repository Structure
        run: |
          echo "=== REPOSITORY STRUCTURE ==="
          echo "📁 Current directory:"
          pwd
          ls -la
          echo ""
          
          echo "📁 Check if challenges folder exists:"
          if [ -d "challenges" ]; then
            echo "✅ challenges/ folder exists"
            echo "📁 Contents of challenges/:"
            ls -la challenges/
            
            echo ""
            echo "🔍 Look for the specific challenge:"
            if [ -d "challenges/balanced-binary-search-tree-validator-mcbt0fnk" ]; then
              echo "✅ Challenge folder exists: challenges/balanced-binary-search-tree-validator-mcbt0fnk"
              echo "📁 Contents:"
              ls -la "challenges/balanced-binary-search-tree-validator-mcbt0fnk/"
              
              if [ -f "challenges/balanced-binary-search-tree-validator-mcbt0fnk/challenge.json" ]; then
                echo "✅ challenge.json exists"
                echo "📄 Current content:"
                cat "challenges/balanced-binary-search-tree-validator-mcbt0fnk/challenge.json"
              else
                echo "❌ challenge.json missing"
              fi
            else
              echo "❌ Challenge folder does not exist"
              echo "🔍 Available challenges:"
              find challenges/ -maxdepth 1 -type d 2>/dev/null | head -10
            fi
          else
            echo "❌ challenges/ folder does not exist"
          fi
          
      - name: 🛠️ Test jq availability
        run: |
          echo "=== JQ TEST ==="
          if command -v jq >/dev/null 2>&1; then
            echo "✅ jq is available"
            jq --version
          else
            echo "❌ jq is not available"
            echo "Available tools:"
            which grep sed awk || echo "Basic tools check"
          fi
          
      - name: 💬 Report Results
        uses: actions/github-script@v7
        with:
          script: |
            const issueBody = `${{ github.event.issue.body }}`;
            const hasSpecificId = issueBody.includes('balanced-binary-search-tree-validator-mcbt0fnk');
            const hasIdPattern = issueBody.includes('**ID:**');
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## 🔍 Debug Results für Issue #${context.issue.number}
              
              **Issue Debug:** Challenge-ID Extraktion getestet
              
              ### 📊 Ergebnisse:
              - ✅ Issue Body contains specific ID: \`${hasSpecificId}\`
              - ✅ Issue Body contains **ID:** pattern: \`${hasIdPattern}\`
              - ✅ Issue Body length: ${issueBody.length} characters
              
              ### 🔍 Expected Challenge-ID:
              \`balanced-binary-search-tree-validator-mcbt0fnk\`
              
              ### 📋 Next Steps:
              Check the workflow logs in the [Actions tab](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) to see:
              1. If the Challenge-ID was extracted correctly
              2. If the challenge folder exists in the repository
              3. If jq tool is available for JSON processing
              
              ---
              🤖 *Debug workflow completed - check logs for details*`
            });
