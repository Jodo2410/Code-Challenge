name: 🔍 Debug Issue Information

on:
  issues:
    types: [opened, closed, labeled, unlabeled, edited]

jobs:
  debug-issue:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🔍 Zeige alle Issue-Informationen
        run: |
          echo "🔍 VOLLSTÄNDIGE ISSUE DEBUG-INFORMATIONEN"
          echo "================================================"
          echo ""
          echo "📋 Issue Basis-Daten:"
          echo "  Nummer: ${{ github.event.issue.number }}"
          echo "  Titel: ${{ github.event.issue.title }}"
          echo "  State: ${{ github.event.issue.state }}"
          echo "  Action: ${{ github.event.action }}"
          echo "  Author: ${{ github.event.issue.user.login }}"
          echo "  Created: ${{ github.event.issue.created_at }}"
          echo "  Updated: ${{ github.event.issue.updated_at }}"
          echo ""
          
      - name: 📋 Zeige Issue Labels
        run: |
          echo "📋 ISSUE LABELS:"
          echo "Raw Labels JSON:"
          echo '${{ toJSON(github.event.issue.labels) }}'
          echo ""
          echo "Label Namen (falls vorhanden):"
          if [ '${{ toJSON(github.event.issue.labels) }}' != '[]' ]; then
            echo '${{ toJSON(github.event.issue.labels) }}' | jq -r '.[].name'
          else
            echo "❌ Keine Labels gefunden!"
          fi
          echo ""
          
      - name: 📄 Zeige Issue Body
        run: |
          echo "📄 ISSUE BODY:"
          echo "=============="
          cat << 'EOF'
          ${{ github.event.issue.body }}
          EOF
          echo ""
          echo "=============="
          
      - name: 🔍 Challenge-ID Test-Extraktion
        run: |
          echo "🔍 TESTE CHALLENGE-ID EXTRAKTION:"
          echo "================================"
          
          # Issue-Body in Datei speichern
          cat << 'EOF' > issue_body.txt
          ${{ github.event.issue.body }}
          EOF
          
          echo "📝 Roher Issue-Body gespeichert in issue_body.txt"
          echo ""
          
          # Verschiedene Extraktions-Muster testen:
          echo "🧪 Test 1: **ID:** Pattern"
          ID1=$(grep -E '\*\*ID:\*\*' issue_body.txt | sed 's/.*\*\*ID:\*\*[[:space:]]*//' | head -1 | xargs || echo "")
          echo "  Gefunden: '$ID1'"
          
          echo "🧪 Test 2: ID: Pattern (Plain)"
          ID2=$(grep -E '^ID:' issue_body.txt | cut -d ':' -f2 | xargs || echo "")
          echo "  Gefunden: '$ID2'"
          
          echo "🧪 Test 3: Regex mit oE"
          ID3=$(grep -oE '\*\*ID:\*\*[[:space:]]*[a-zA-Z0-9_-]+' issue_body.txt | sed 's/.*\*\*ID:\*\*[[:space:]]*//' || echo "")
          echo "  Gefunden: '$ID3'"
          
          echo "🧪 Test 4: Erweiterte Regex"
          ID4=$(echo "${{ github.event.issue.body }}" | grep -oE '\*\*ID:\*\*[[:space:]]*[a-zA-Z0-9_-]+' | sed 's/.*\*\*ID:\*\*[[:space:]]*//' || echo "")
          echo "  Gefunden: '$ID4'"
          
          echo ""
          echo "📊 ERGEBNIS:"
          FINAL_ID=""
          if [ -n "$ID1" ]; then FINAL_ID="$ID1"; fi
          if [ -z "$FINAL_ID" ] && [ -n "$ID2" ]; then FINAL_ID="$ID2"; fi
          if [ -z "$FINAL_ID" ] && [ -n "$ID3" ]; then FINAL_ID="$ID3"; fi
          if [ -z "$FINAL_ID" ] && [ -n "$ID4" ]; then FINAL_ID="$ID4"; fi
          
          if [ -n "$FINAL_ID" ]; then
            echo "✅ Challenge-ID erfolgreich extrahiert: '$FINAL_ID'"
          else
            echo "❌ Keine Challenge-ID gefunden!"
          fi
          
          rm -f issue_body.txt
          
      - name: 🧪 Workflow-Trigger-Bedingungen testen
        run: |
          echo "🧪 TESTE WORKFLOW-TRIGGER-BEDINGUNGEN:"
          echo "====================================="
          
          # Test 1: Label 'challenge-error'
          LABEL_CHECK="${{ contains(github.event.issue.labels.*.name, 'challenge-error') }}"
          echo "1. Label 'challenge-error': $LABEL_CHECK"
          
          # Test 2: Titel enthält "Challenge Error Report"
          TITLE_CHECK="${{ contains(github.event.issue.title, 'Challenge Error Report') }}"
          echo "2. Titel enthält 'Challenge Error Report': $TITLE_CHECK"
          
          # Test 3: Body enthält "🚨 Challenge Error Report"
          BODY_CHECK="${{ contains(github.event.issue.body, '🚨 Challenge Error Report') }}"
          echo "3. Body enthält '🚨 Challenge Error Report': $BODY_CHECK"
          
          # Test 4: Body enthält "**ID:**"
          ID_CHECK="${{ contains(github.event.issue.body, '**ID:**') }}"
          echo "4. Body enthält '**ID:**': $ID_CHECK"
          
          echo ""
          echo "📊 ZUSAMMENFASSUNG:"
          if [ "$LABEL_CHECK" = "true" ] || [ "$TITLE_CHECK" = "true" ] || [ "$BODY_CHECK" = "true" ] || [ "$ID_CHECK" = "true" ]; then
            echo "✅ Unlock-Workflow SOLLTE ausgeführt werden!"
            echo "   Mindestens eine Bedingung ist erfüllt."
          else
            echo "❌ Unlock-Workflow wird NICHT ausgeführt!"
            echo "   Keine der Bedingungen ist erfüllt."
          fi
          
      - name: 📤 Issue-Kommentar mit Debug-Info
        if: github.event.action == 'closed'
        uses: actions/github-script@v7
        with:
          script: |
            const labelCheck = ${{ contains(github.event.issue.labels.*.name, 'challenge-error') }};
            const titleCheck = ${{ contains(github.event.issue.title, 'Challenge Error Report') }};
            const bodyCheck = ${{ contains(github.event.issue.body, '🚨 Challenge Error Report') }};
            const idCheck = ${{ contains(github.event.issue.body, '**ID:**') }};
            
            const shouldTrigger = labelCheck || titleCheck || bodyCheck || idCheck;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## 🔍 Debug Information für Issue #${context.issue.number}
              
              **Issue geschlossen - Workflow-Trigger-Analyse:**
              
              ### 🧪 Trigger-Bedingungen:
              - ✅ Label 'challenge-error': \`${labelCheck}\`
              - ✅ Titel enthält 'Challenge Error Report': \`${titleCheck}\`
              - ✅ Body enthält '🚨 Challenge Error Report': \`${bodyCheck}\`
              - ✅ Body enthält '**ID:**': \`${idCheck}\`
              
              ### 📊 Ergebnis:
              ${shouldTrigger ? 
                '✅ **Unlock-Workflow SOLLTE ausgeführt werden**' : 
                '❌ **Unlock-Workflow wird NICHT ausgeführt**'
              }
              
              ### 📋 Labels auf diesem Issue:
              ${context.payload.issue.labels.map(label => \`- \`${label.name}\`\`).join('\\n') || 'Keine Labels gefunden'}
              
              ### 🔗 Nützliche Links:
              - [Workflow-Runs anzeigen](https://github.com/${context.repo.owner}/${context.repo.repo}/actions)
              - [Debug-Workflow-Run](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})
              
              ---
              🤖 *Debug-Kommentar vom Issue-Debug-Workflow*`
            });
